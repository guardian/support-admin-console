// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The AdminConsole stack matches the snapshot 1`] = `
Object {
  "Metadata": Object {
    "gu:cdk:constructs": Array [
      "GuDynamoDBReadPolicy",
      "GuDynamoDBReadPolicy",
      "GuDynamoDBWritePolicy",
      "GuDynamoDBReadPolicy",
      "GuDynamoDBWritePolicy",
      "GuDynamoDBReadPolicy",
      "GuDynamoDBWritePolicy",
      "GuDynamoDBReadPolicy",
      "GuDynamoDBWritePolicy",
      "GuAllowPolicy",
      "GuAllowPolicy",
      "GuGetS3ObjectsPolicy",
      "GuPutS3ObjectsPolicy",
      "GuAllowPolicy",
      "GuDynamoDBReadPolicy",
      "GuDynamoDBReadPolicy",
      "GuAllowPolicy",
      "GuAllowPolicy",
      "GuVpcParameter",
      "GuSubnetListParameter",
      "GuSubnetListParameter",
      "GuEc2App",
      "GuCertificate",
      "GuInstanceRole",
      "GuDescribeEC2Policy",
      "GuLoggingStreamNameParameter",
      "GuLogShippingPolicy",
      "GuDistributionBucketParameter",
      "GuGetDistributablePolicy",
      "GuParameterStoreReadPolicy",
      "GuAmiParameter",
      "GuHttpsEgressSecurityGroup",
      "GuWazuhAccess",
      "GuAutoScalingGroup",
      "GuApplicationLoadBalancer",
      "GuApplicationTargetGroup",
      "GuHttpsApplicationListener",
      "GuAlb5xxPercentageAlarm",
      "GuUnhealthyInstancesAlarm",
      "GuCname",
      "GuStringParameter",
      "GuDynamoDBReadPolicy",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": Object {
    "LoadBalancerAdminconsoleDnsName": Object {
      "Description": "DNS entry for LoadBalancerAdminconsole",
      "Value": Object {
        "Fn::GetAtt": Array [
          "LoadBalancerAdminconsole69251694",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": Object {
    "AMIAdminconsole": Object {
      "Description": "Amazon Machine Image ID for the app admin-console. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "CapiAccountId": Object {
      "Description": "ID of the CAPI aws account",
      "Type": "String",
    },
    "DistributionBucketName": Object {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": Object {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "VpcId": Object {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
    "adminconsolePrivateSubnets": Object {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "adminconsolePublicSubnets": Object {
      "Default": "/account/vpc/primary/subnets/public",
      "Description": "A list of public subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
  },
  "Resources": Object {
    "AcquisitionsBucket8EA032AA": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Effect": "Allow",
              "Resource": Array [
                "arn:aws:s3:::acquisition-events/*",
                "arn:aws:s3:::acquisition-events",
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcquisitionsBucket8EA032AA",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlbSsmParam485C1D52": Object {
      "Properties": Object {
        "DataType": "text",
        "Description": "The arn of the ALB for amiable-PROD. N.B. this parameter is created via cdk",
        "Name": "/infosec/waf/services/PROD/support-admin-console-alb-arn",
        "Tags": Object {
          "Stack": "support",
          "Stage": "PROD",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/support-admin-console",
        },
        "Tier": "Standard",
        "Type": "String",
        "Value": Object {
          "Ref": "LoadBalancerAdminconsole69251694",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "ArchivedChannelTestsDynamoTable": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "channel",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "name",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "channel",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "name",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "TableName": "support-admin-console-archived-channel-tests-PROD",
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-admin-console",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "AthenaOutputBucket826361ED": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Effect": "Allow",
              "Resource": Array [
                "arn:aws:s3:::gu-support-analytics/*",
                "arn:aws:s3:::gu-support-analytics",
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AthenaOutputBucket826361ED",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutoScalingGroupAdminconsoleASG0A6020EA": Object {
      "Properties": Object {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchTemplate": Object {
          "LaunchTemplateId": Object {
            "Ref": "supportPRODadminconsoleBBAF00DB",
          },
          "Version": Object {
            "Fn::GetAtt": Array [
              "supportPRODadminconsoleBBAF00DB",
              "LatestVersionNumber",
            ],
          },
        },
        "MaxSize": "2",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "admin-console",
          },
          Object {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/support-admin-console",
          },
          Object {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": Object {
              "Ref": "LoggingStreamName",
            },
          },
          Object {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "PROD",
          },
        ],
        "TargetGroupARNs": Array [
          Object {
            "Ref": "TargetGroupAdminconsole160A1621",
          },
        ],
        "VPCZoneIdentifier": Object {
          "Ref": "adminconsolePrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "BannerDesignsDynamoTable": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "name",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "name",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "TableName": "support-admin-console-banner-designs-PROD",
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-admin-console",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "CampaignsDynamoTable": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "name",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "name",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "TableName": "support-admin-console-campaigns-PROD",
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-admin-console",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "CertificateAdminconsole74B584AB": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "DomainName": "support.gutools.co.uk",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "admin-console",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-admin-console",
          },
          Object {
            "Key": "Name",
            "Value": "AdminConsole/CertificateAdminconsole",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "ChannelTestsDynamoTable": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "channel",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "name",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "campaignName",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": Array [
          Object {
            "IndexName": "campaignName-name-index",
            "KeySchema": Array [
              Object {
                "AttributeName": "campaignName",
                "KeyType": "HASH",
              },
              Object {
                "AttributeName": "name",
                "KeyType": "RANGE",
              },
            ],
            "Projection": Object {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "channel",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "name",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "TableName": "support-admin-console-channel-tests-PROD",
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-admin-console",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudwatchA324BFA2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudwatchA324BFA2",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DescribeEC2PolicyFF5F9295": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DynamoReadArchivedChannelTestsDynamoTable1835BCEF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:GetRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "ArchivedChannelTestsDynamoTable",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoReadArchivedChannelTestsDynamoTable1835BCEF",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DynamoReadBannerDesignsDynamoTable74192C24": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:GetRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "BannerDesignsDynamoTable",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoReadBannerDesignsDynamoTable74192C24",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DynamoReadCampaignsDynamoTable13FF797A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:GetRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "CampaignsDynamoTable",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoReadCampaignsDynamoTable13FF797A",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DynamoReadChannelTestsDynamoTable934E3DAF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:GetRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "ChannelTestsDynamoTable",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoReadChannelTestsDynamoTable934E3DAF",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DynamoReadChannelTestsDynamoTableindexcampaignNamenameindex265299CD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:GetRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "ChannelTestsDynamoTable",
                    },
                    "/index/campaignName-name-index",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoReadChannelTestsDynamoTableindexcampaignNamenameindex265299CD",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DynamoReadsupermodeA2B60FEA": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:GetRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/super-mode-PROD",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoReadsupermodeA2B60FEA",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DynamoReadsupermodeindexendFE67AC4E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:GetRecords",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/super-mode-PROD/index/end",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoReadsupermodeindexendFE67AC4E",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DynamoWriteArchivedChannelTestsDynamoTableB9A0E0BA": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:DeleteItem",
                "dynamodb:UpdateItem",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "ArchivedChannelTestsDynamoTable",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoWriteArchivedChannelTestsDynamoTableB9A0E0BA",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DynamoWriteBannerDesignsDynamoTable36E4A766": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:DeleteItem",
                "dynamodb:UpdateItem",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "BannerDesignsDynamoTable",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoWriteBannerDesignsDynamoTable36E4A766",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DynamoWriteCampaignsDynamoTableB29B2DDA": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:DeleteItem",
                "dynamodb:UpdateItem",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "CampaignsDynamoTable",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoWriteCampaignsDynamoTableB29B2DDA",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DynamoWriteChannelTestsDynamoTable593B6212": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:DeleteItem",
                "dynamodb:UpdateItem",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "ChannelTestsDynamoTable",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoWriteChannelTestsDynamoTable593B6212",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyAdminconsole6DA8CA46": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:s3:::",
                    Object {
                      "Ref": "DistributionBucketName",
                    },
                    "/support/PROD/admin-console/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyAdminconsole6DA8CA46",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupAdminconsole2F77C5D2": Object {
      "Properties": Object {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "admin-console",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-admin-console",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupAdminconsolefromAdminConsoleLoadBalancerAdminconsoleSecurityGroup606D9E9F900031980AFE": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupAdminconsole2F77C5D2",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerAdminconsoleSecurityGroupE93D84AC",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuLogShippingPolicy981BFE5A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:kinesis:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    Object {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "High5xxPercentageAlarmAdminconsole274ADE37": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":marketing-dev",
              ],
            ],
          },
        ],
        "AlarmDescription": "admin-console exceeded 0% error rate",
        "AlarmName": "5XX error returned by admin-console PROD",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": Array [
          Object {
            "Expression": "100*(m1+m2)/m3",
            "Id": "expr_1",
            "Label": "% of 5XX responses served for admin-console (load balancer and instances combined)",
          },
          Object {
            "Id": "m1",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "LoadBalancerAdminconsole69251694",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HTTPCode_ELB_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          Object {
            "Id": "m2",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "LoadBalancerAdminconsole69251694",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HTTPCode_Target_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          Object {
            "Id": "m3",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "LoadBalancerAdminconsole69251694",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "RequestCount",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "InstanceRoleAdminconsole347DA627": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonAthenaFullAccess",
              ],
            ],
          },
        ],
        "Path": "/",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "admin-console",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-admin-console",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ListenerAdminconsole3E633904": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": Object {
              "Ref": "CertificateAdminconsole74B584AB",
            },
          },
        ],
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "TargetGroupAdminconsole160A1621",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "LoadBalancerAdminconsole69251694",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerAdminconsole69251694": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "LoadBalancerAdminconsoleSecurityGroupE93D84AC",
              "GroupId",
            ],
          },
        ],
        "Subnets": Object {
          "Ref": "adminconsolePublicSubnets",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "admin-console",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-admin-console",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerAdminconsoleSecurityGroupE93D84AC": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB AdminConsoleLoadBalancerAdminconsole64F16A33",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "admin-console",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-admin-console",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerAdminconsoleSecurityGrouptoAdminConsoleGuHttpsEgressSecurityGroupAdminconsole04293C9B9000EB39CE6F": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupAdminconsole2F77C5D2",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerAdminconsoleSecurityGroupE93D84AC",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "LoadBalancerAdminconsoleSecurityGrouptoAdminConsoleWazuhSecurityGroupDAE23D8490004DE069B1": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerAdminconsoleSecurityGroupE93D84AC",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ParameterStoreReadAdminconsole9C23871C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/support/admin-console",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/PROD/support/admin-console/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PublicSettingsBucketPut4D9A09A1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:PutObject",
                "s3:PutObjectAcl",
              ],
              "Effect": "Allow",
              "Resource": Array [
                "arn:aws:s3:::gu-contributions-public/epic/PROD/*",
                "arn:aws:s3:::gu-contributions-public/banner/PROD/*",
                "arn:aws:s3:::gu-contributions-public/header/PROD/*",
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PublicSettingsBucketPut4D9A09A1",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SSMGetF4C837D5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/admin-console/PROD",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SSMGetF4C837D5",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SettingsBucketGet3389C916": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": Array [
                "arn:aws:s3:::support-admin-console/PROD/*",
                "arn:aws:s3:::support-admin-console/google-auth-service-account-certificate.json",
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SettingsBucketGet3389C916",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SettingsBucketPut45E58A86": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::support-admin-console/PROD/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SettingsBucketPut45E58A86",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TargetGroupAdminconsole160A1621": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 9000,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "admin-console",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-admin-console",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "UnhealthyInstancesAlarmAdminconsoleF0C5DFCF": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":marketing-dev",
              ],
            ],
          },
        ],
        "AlarmDescription": "admin-console's instances have failed healthchecks several times over the last 1 hour.
      This typically results in the AutoScaling Group cycling instances and can lead to problems with deployment,
      scaling or handling traffic spikes.

      Check admin-console's application logs or ssh onto an unhealthy instance in order to debug these problems.",
        "AlarmName": "Unhealthy instances for admin-console in PROD",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 30,
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      1,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "ListenerAdminconsole3E633904",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      2,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "ListenerAdminconsole3E633904",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "ListenerAdminconsole3E633904",
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
          },
          Object {
            "Name": "TargetGroup",
            "Value": Object {
              "Fn::GetAtt": Array [
                "TargetGroupAdminconsole160A1621",
                "TargetGroupFullName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 60,
        "MetricName": "UnHealthyHostCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "WazuhSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-admin-console",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "WazuhSecurityGroupfromAdminConsoleLoadBalancerAdminconsoleSecurityGroup606D9E9F90006E5FA438": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerAdminconsoleSecurityGroupE93D84AC",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "capirole2BC59B5B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "CapiAccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "dynamodb:BatchGetItem",
                    "dynamodb:GetItem",
                    "dynamodb:Scan",
                    "dynamodb:Query",
                    "dynamodb:GetRecords",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:dynamodb:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":table/",
                        Object {
                          "Ref": "ChannelTestsDynamoTable",
                        },
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "dynamoPolicyForCapi",
          },
        ],
        "RoleName": "support-admin-console-channel-tests-capi-role-PROD",
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-admin-console",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "cname": Object {
      "Properties": Object {
        "Name": "support.gutools.co.uk",
        "RecordType": "CNAME",
        "ResourceRecords": Array [
          Object {
            "Fn::GetAtt": Array [
              "LoadBalancerAdminconsole69251694",
              "DNSName",
            ],
          },
        ],
        "Stage": "PROD",
        "TTL": 3600,
      },
      "Type": "Guardian::DNS::RecordSet",
    },
    "supportPRODadminconsoleBBAF00DB": Object {
      "Properties": Object {
        "LaunchTemplateData": Object {
          "IamInstanceProfile": Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "supportPRODadminconsoleProfile82C4E682",
                "Arn",
              ],
            },
          },
          "ImageId": Object {
            "Ref": "AMIAdminconsole",
          },
          "InstanceType": "t4g.micro",
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "GuHttpsEgressSecurityGroupAdminconsole2F77C5D2",
                "GroupId",
              ],
            },
            Object {
              "Fn::GetAtt": Array [
                "WazuhSecurityGroup",
                "GroupId",
              ],
            },
          ],
          "TagSpecifications": Array [
            Object {
              "ResourceType": "instance",
              "Tags": Array [
                Object {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                Object {
                  "Key": "gu:repo",
                  "Value": "guardian/support-admin-console",
                },
                Object {
                  "Key": "Name",
                  "Value": "AdminConsole/support-PROD-admin-console",
                },
                Object {
                  "Key": "Stack",
                  "Value": "support",
                },
                Object {
                  "Key": "Stage",
                  "Value": "PROD",
                },
              ],
            },
            Object {
              "ResourceType": "volume",
              "Tags": Array [
                Object {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                Object {
                  "Key": "gu:repo",
                  "Value": "guardian/support-admin-console",
                },
                Object {
                  "Key": "Name",
                  "Value": "AdminConsole/support-PROD-admin-console",
                },
                Object {
                  "Key": "Stack",
                  "Value": "support",
                },
                Object {
                  "Key": "Stage",
                  "Value": "PROD",
                },
              ],
            },
          ],
          "UserData": Object {
            "Fn::Base64": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "#!/bin/bash -ev
    aws --region ",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  " s3 cp s3://membership-dist/support/PROD/admin-console/support-admin-console_1.0-SNAPSHOT_all.deb /tmp
    dpkg -i /tmp/support-admin-console_1.0-SNAPSHOT_all.deb
    /opt/cloudwatch-logs/configure-logs application support PROD admin-console /var/log/support-admin-console/application.log",
                ],
              ],
            },
          },
        },
        "TagSpecifications": Array [
          Object {
            "ResourceType": "launch-template",
            "Tags": Array [
              Object {
                "Key": "gu:cdk:version",
                "Value": "TEST",
              },
              Object {
                "Key": "gu:repo",
                "Value": "guardian/support-admin-console",
              },
              Object {
                "Key": "Name",
                "Value": "AdminConsole/support-PROD-admin-console",
              },
              Object {
                "Key": "Stack",
                "Value": "support",
              },
              Object {
                "Key": "Stage",
                "Value": "PROD",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "supportPRODadminconsoleProfile82C4E682": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAdminconsole347DA627",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
  },
}
`;
